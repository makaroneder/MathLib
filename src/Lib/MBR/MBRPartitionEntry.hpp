#ifndef MBRPartitionEntry_H
#define MBRPartitionEntry_H
#include "MBRPartitionEntryCHS.hpp"
#include "../Interval.hpp"

struct MBRPartitionEntry {
    enum class Type : uint8_t {
        Normal = 0,
        Active = 1 << 7,
    };
    enum class ID : uint8_t {
        Empty = 0,
        FAT12,
        XenixRoot,
        XenixUser,
        FAT16SmallerThan32M,
        Extended,
        FAT16,
        HPFS,
        NTFS = HPFS,
        ExFAT = HPFS,
        AIX,
        BootableAIX,
        OS2BootManager,
        Windows95FAT32,
        Windows95LBAFAT32,
        SiliconSafe,
        Windows95LBAFAT16,
        Windows95Extended,
        OPUS,
        HiddenFAT12,
        CompaqDiagnostic,
        HiddenFAT16LessThan32M = 0x14,
        HiddenFAT16 = 0x16,
        HiddenHPFS,
        HiddenNTFS = HiddenHPFS,
        HiddenExFAT = HiddenHPFS,
        ASTSmartSleep,
        PhotonCOS,
        HiddenWindows95FAT32 = 0x1b,
        HiddenWindows95LBAFAT32,
        HiddenWindows95LBAFAT16 = 0x1e,
        OFS1,
        OxygenFileSystem,
        OxygenExtended,
        NECDOS = 0x24,
        PQservice = 0x27,
        WindowsREHidden = PQservice,
        MirOS = PQservice,
        RouterBootKernel = PQservice,
        AFS = 0x2a,
        SylStor,
        NOS = 0x32,
        JFS = 0x35,
        THEOS2G = 0x38,
        Plan9,
        THEOSSpanned = Plan9,
        THEOS4G,
        THEOSExtended,
        PartitionMagicRecovery,
        HiddenNetWare,
        Venix80286 = 0x40,
        PICK = Venix80286,
        PPCPRePBoot,
        SFS,
        Linux1,
        GoBack,
        BootUSBootManager,
        EUMEL1 = BootUSBootManager,
        EUMEL2,
        EUMEL3,
        EUMEL4,
        ALFS = 0x4a,
        Oberon = 0x4c,
        QNX4xPart1,
        QNX4xPart2,
        QNX4xPart3,
        OnTrackDM,
        OnTrackDMRW,
        CPM,
        OnTrackDM6Aux3,
        OnTrackDM6,
        EZDrive,
        GoldenBow,
        DrivePro,
        PriamEdisk = 0x5c,
        SpeedStor = 0x61,
        GNUHURD = 0x63,
        NovellNetware286,
        NovellNetware386,
        NovellNetwareSMS,
        Novell1,
        Novell2,
        NovellNetwareNSS,
        DiskSecureMultiboot = 0x70,
        V7X86 = 0x72,
        Scramdisk = 0x74,
        PCIX,
        M2FS = 0x77,
        XOSL,
        FIX = 0x7e,
        AltOS,
        OldMinix,
        Minix,
        OldLinux = Minix,
        LinuxSwap,
        SolarisX86 = LinuxSwap,
        Linux2,
        OS2Hidden,
        LinuxExtended,
        FAT16VolumeSet,
        NTFSVolumeSet,
        LinuxPlaintext,
        LinuxKernel = 0x8a,
        LegacyFaultTolerantFAT32Volume,
        LegacyFaultTolerantFAT32VolumeUsingExtendedInt0x13,
        FDISKFAT12,
        LinuxLogicalVolumeManager,
        FDISKFAT16SmallerThan32M = 0x90,
        FDISKExtended,
        FDISKFAT16,
        HiddenLinux1,
        Amoeba = HiddenLinux1,
        AmoebaBadBlockTable,
        MITEXOPC,
        CHRPISO9660,
        FDISKFAT32,
        FDISKLBAFAT32,
        DCE376,
        FDISKLBAFAT16,
        FDISKLBAExtended,
        ForthOS = 0x9e,
        BSDOS,
        LaptopHibernation1,
        LaptopHibernation2,
        HPVolumeExpansion1 = LaptopHibernation2,
        HPVolumeExpansion2 = 0xa3,
        HPVolumeExpansion3,
        FreeBSD,
        OpenBSD,
        NeXTStep,
        DarwinUFS,
        NetBSD,
        OlivettiFAT12,
        DarwinBoot,
        RISCOSADFS = 0xad,
        ShagOSFS,
        HFS,
        BootStarDummy,
        HPVolumeExpansion4,
        QNXNeutrinoPowerSafeFS,
        HPVolumeExpansion5,
        HPVolumeExpansion6,
        HPVolumeExpansion7,
        HPVolumeExpansion8,
        BSDIFileSystem,
        BSDISwap,
        BootWizardHidden = 0xbb,
        AcronisBackup,
        BonnyDOS,
        Solaris8Boot,
        NewSolarisX86,
        CTOS,
        DRDOSFAT12,
        HiddenLinux2,
        HiddenLinuxSwap,
        DRDOSFAT16SmallerThan32M,
        DRDOSExtended,
        DRDOSFAT16,
        SyrinxBoot,
        DRDOS1,
        DRDOS2,
        DRDOS3,
        DRDOSCHSFAT32,
        DRDOSLBAFAT32,
        CTOSMemdump,
        DRDOSLBAExtension,
        Real32,
        OldMultiuserFAT12,
        OldMultiuserFAT16SmallerThan32M = 0xd4,
        OldMultiuserExtended,
        OldMultiuserFAT16,
        CPM86 = 0xd8,
        NonFileSystemData = 0xda,
        DigitalResearchCPM,
        HiddenCTOSMemdump = 0xdd,
        DellPowerEdgeServerUtilities,
        BootItEMBRM,
        STAVFS,
        DOSAccess,
        DOSReadOnly = 0xe3,
        SpeedStorExtendedFAT16LessThan1024Cylinders,
        LogicallySectoredFAT,
        StorageDimensionsSpeedStor1,
        LUKS = 0xe8,
        RufusExtra = 0xea,
        BeOSBFS,
        SkyOSSkyFS,
        Sprytix,
        GPT,
        EFI,
        LinuxPARISCBootLoader,
        StorageDimensionsSpeedStor2,
        DOSSecondary,
        StorageDimensionsSpeedStor3,
        SpeedStorLargePartition,
        PrologueSingleVolumePartition = SpeedStorLargePartition,
        PrologueMultiVolumePartition,
        StorageDimensionsSpeedStor4,
        DDRdriveSolidStateFileSystem,
        ExtPersistentCache = 0xf9,
        Bochs,
        VMwareFileSystem,
        VMwareSwap,
        LinuxRAID,
        LANstep,
        WindowsNTDiskAdminHidden = LANstep,
        OldLinuxLogicalVolumeManager = LANstep,
        XenixBadBlockTable,
    };
    Type type;
    MBRPartitionEntryCHS startCHS;
    ID id;
    MBRPartitionEntryCHS endCHS;
    uint32_t startLBA;
    uint32_t sectorCount;

    MBRPartitionEntry(void);
    MBRPartitionEntry(const Interval<uint32_t>& lba, const ID& id, const Type& type = Type::Normal, const uint8_t& heads = 16, const uint8_t& sectors = 63);
    bool IsValid(void) const;
    Interval<uint32_t> GetInterval(void) const;
} __attribute__((packed));

#endif